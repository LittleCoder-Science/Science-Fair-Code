import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

# Simulated Dataset (Replace with real medical data)
data = {
    'Glucose': [85, 120, 150, 70, 95, 180, 200, 160],
    'BMI': [22, 30, 35, 18, 25, 40, 45, 38],
    'Age': [25, 50, 65, 20, 40, 70, 80, 60],
    'Disease': [0, 1, 1, 0, 0, 1, 1, 1]  # 0 = No disease, 1 = Disease
}

# Load dataset into a DataFrame
df = pd.DataFrame(data)

# Split data into features (X) and labels (y)
X = df[['Glucose', 'BMI', 'Age']]
y = df['Disease']

# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train Random Forest Classifier
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate the model
print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred))
print("\nClassification Report:")
print(classification_report(y_test, y_pred))
print("\nAccuracy Score:", accuracy_score(y_test, y_pred))

# Example usage for live input
new_patient = [[130, 28, 45]]  # Replace with live data
prediction = model.predict(new_patient)
print(f"Prediction for new patient: {'Disease' if prediction[0] == 1 else 'No Disease'}")
