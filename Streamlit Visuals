import streamlit as st
import plotly.graph_objects as go
import matplotlib.pyplot as plt
import numpy as np
from scipy.integrate import odeint
import pandas as pd
import seaborn as sns

st.title('Disease Diagnosis and Treatment Optimization')

# 3D Surface Plot
st.subheader('3D Visualization of Disease Spread')
x = np.linspace(0, 10, 100)
y = np.linspace(0, 10, 100)
X, Y = np.meshgrid(x, y)
Z = np.sin(X) * np.cos(Y)
fig = go.Figure(data=[go.Surface(z=Z, x=X, y=Y)])
fig.update_layout(title='Disease Spread Simulation', scene=dict(
    xaxis_title='Time (Days)',
    yaxis_title='Population',
    zaxis_title='Infection Rate'
))
st.plotly_chart(fig)

# Pharmacokinetics
st.subheader('Drug Concentration Over Time')
def drug_model(C, t, k_abs, k_elim):
    dCdt = -k_elim * C + k_abs
    return dCdt

time = np.linspace(0, 48, 500)
k_abs = st.slider('Absorption Rate', 0.1, 1.0, 0.5)
k_elim = st.slider('Elimination Rate', 0.1, 1.0, 0.2)
C0 = 0
concentration = odeint(drug_model, C0, time, args=(k_abs, k_elim))

fig, ax = plt.subplots()
ax.plot(time, concentration, label='Drug Concentration')
ax.set_title('Drug Concentration Over Time')
ax.set_xlabel('Time (Hours)')
ax.set_ylabel('Concentration (mg/L)')
st.pyplot(fig)

# Feature Importance
st.subheader('Feature Importance in Disease Prediction')
features = ['Age', 'Biomarker A', 'Biomarker B', 'Community Spread']
importances = [0.3, 0.4, 0.2, 0.1]

fig, ax = plt.subplots()
ax.bar(features, importances, color='skyblue')
ax.set_title('Feature Importance')
ax.set_ylabel('Importance')
st.pyplot(fig)
