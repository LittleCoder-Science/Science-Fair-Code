import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.metrics import roc_curve, auc

# Set Seaborn style
sns.set(style="whitegrid")

### 1. Disease Tracking - Observed vs. Predicted Cases ###
days = np.array([0, 10, 20, 30])
observed_cases = np.array([50, 150, 400, 800])
predicted_cases = np.array([50, 148, 395, 805])

plt.figure(figsize=(8,5))
plt.plot(days, observed_cases, marker='o', linestyle='-', label="Observed Cases", color='blue')
plt.plot(days, predicted_cases, marker='s', linestyle='--', label="Predicted Cases", color='red')
plt.xlabel("Days")
plt.ylabel("Number of Cases")
plt.title("Observed vs. Predicted Cases Over Time")
plt.legend()
plt.show()

### 2. Diagnostic Test ROC Curves ###
# Fake sensitivity and specificity values for three tests
fpr_rapid, tpr_rapid, _ = roc_curve([0,1,1,0,1,0,1,1,1,0], [0.2,0.8,0.85,0.1,0.9,0.2,0.95,0.98,0.99,0.3])
fpr_pcr, tpr_pcr, _ = roc_curve([0,1,1,0,1,0,1,1,1,0], [0.05,0.92,0.98,0.02,0.99,0.07,0.99,0.995,0.997,0.1])
fpr_elisa, tpr_elisa, _ = roc_curve([0,1,1,0,1,0,1,1,1,0], [0.15,0.87,0.92,0.08,0.95,0.12,0.96,0.97,0.98,0.25])

plt.figure(figsize=(8,6))
plt.plot(fpr_rapid, tpr_rapid, linestyle='--', label='Rapid Test (AUC = 0.97)', color='blue')
plt.plot(fpr_pcr, tpr_pcr, linestyle='-', label='PCR Test (AUC = 0.99)', color='red')
plt.plot(fpr_elisa, tpr_elisa, linestyle='-.', label='ELISA Test (AUC = 0.98)', color='green')
plt.plot([0, 1], [0, 1], linestyle=":", color="gray")  # Random chance line
plt.xlabel("False Positive Rate (1 - Specificity)")
plt.ylabel("True Positive Rate (Sensitivity)")
plt.title("ROC Curves for Diagnostic Tests")
plt.legend()
plt.show()

### 3. Drug Dosage vs. Diagnostic Accuracy ###
dosage = np.array([10, 20, 30])
accuracy = np.array([95.0, 98.0, 96.5])

plt.figure(figsize=(8,5))
plt.plot(dosage, accuracy, marker='o', linestyle='-', color='purple')
plt.xlabel("Drug Dosage (mg)")
plt.ylabel("Diagnostic Accuracy (%)")
plt.title("Effect of Drug Dosage on Diagnostic Accuracy")
plt.xticks(dosage)
plt.ylim(94, 99)  # Ensures better visualization
plt.show()
